{"version":3,"sources":["components/InputTodo.jsx","components/UncompleteTodos.jsx","components/CompleteTodos.jsx","App.jsx","index.js"],"names":["InputTodo","props","todoText","onChange","onClick","disabled","className","placeholder","value","UncompleteTodos","uncompleteTodos","onClickComplete","onClickDelete","map","todo","index","CompleteTodos","completeTodos","onClickBack","App","useState","setTodoText","setUncompleteTodos","setCompleteTodos","event","target","newTodos","length","style","color","newUncompleteTodos","splice","newCompleteTodos","ReactDom","render","document","getElementById"],"mappings":"mMAEaA,EAAY,SAACC,GACxB,IAAQC,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,SAAUC,EAAsBH,EAAtBG,QAASC,EAAaJ,EAAbI,SACrC,OACE,sBAAKC,UAAU,aAAf,UACE,uBACED,SAAUA,EACVE,YAAY,0BACZC,MAAON,EACPC,SAAUA,IAEZ,wBAAQE,SAAUA,EAAUD,QAASA,EAArC,8BCVOK,EAAkB,SAACR,GAC9B,IAAQS,EAAoDT,EAApDS,gBAAiBC,EAAmCV,EAAnCU,gBAAiBC,EAAkBX,EAAlBW,cAC1C,OACE,sBAAKN,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAb,2CACA,6BACGI,EAAgBG,KAAI,SAACC,EAAMC,GAC1B,OACE,sBAAgBT,UAAU,WAA1B,UACE,6BAAKQ,IACL,wBAAQV,QAAS,kBAAMO,EAAgBI,IAAvC,0BACA,wBAAQX,QAAS,kBAAMQ,EAAcG,IAArC,4BAHQD,YCRTE,EAAgB,SAACf,GAC5B,IAAQgB,EAA+BhB,EAA/BgB,cAAeC,EAAgBjB,EAAhBiB,YACvB,OACE,sBAAKZ,UAAU,gBAAf,UACE,mBAAGA,UAAU,QAAb,qCACA,6BACGW,EAAcJ,KAAI,SAACC,EAAMC,GACxB,OACE,sBAAgBT,UAAU,WAA1B,UACE,6BAAKQ,IACL,wBACEV,QAAS,WACPc,EAAYH,IAFhB,4BAFQD,YCJTK,EAAM,WAGjB,MAAgCC,mBAAS,IAAzC,mBAAOlB,EAAP,KAAiBmB,EAAjB,KAEA,EAA8CD,mBAAS,IAAvD,mBAAOV,EAAP,KAAwBY,EAAxB,KAEA,EAA0CF,mBAAS,IAAnD,mBAAOH,EAAP,KAAsBM,EAAtB,KAqCA,OACE,qCACE,cAAC,EAAD,CACErB,SAAUA,EACVC,SArCmB,SAACqB,GAAD,OAAWH,EAAYG,EAAMC,OAAOjB,QAsCvDJ,QApCa,WACjB,GAAiB,KAAbF,EAAJ,CACA,IAAMwB,EAAQ,sBAAOhB,GAAP,CAAwBR,IACtCoB,EAAmBI,GACnBL,EAAY,MAiCRhB,SAAUK,EAAgBiB,QAAU,IAErCjB,EAAgBiB,QAAU,GACzB,mBAAGC,MAAO,CAAEC,MAAO,OAAnB,sFAGF,cAAC,EAAD,CACEnB,gBAAiBA,EACjBC,gBAhCkB,SAACI,GACvB,IAAMe,EAAkB,YAAOpB,GAC/BoB,EAAmBC,OAAOhB,EAAO,GACjC,IAAMiB,EAAgB,sBAAOf,GAAP,CAAsBP,EAAgBK,KAC5DO,EAAmBQ,GACnBP,EAAiBS,IA4BbpB,cAvCgB,SAACG,GACrB,IAAMW,EAAQ,YAAOhB,GACrBgB,EAASK,OAAOhB,EAAO,GACvBO,EAAmBI,MAsCjB,cAAC,EAAD,CAAeT,cAAeA,EAAeC,YA3B7B,SAACH,GACnB,IAAMiB,EAAgB,YAAOf,GAC7Be,EAAiBD,OAAOhB,EAAO,GAC/B,IAAMe,EAAkB,sBAAOpB,GAAP,CAAwBO,EAAcF,KAC9DO,EAAmBQ,GACnBP,EAAiBS,UCxCrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.69a6328e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const InputTodo = (props) => {\r\n  const { todoText, onChange, onClick, disabled } = props;\r\n  return (\r\n    <div className=\"input-area\">\r\n      <input\r\n        disabled={disabled}\r\n        placeholder=\"TO DOを入力\"\r\n        value={todoText}\r\n        onChange={onChange}\r\n      />\r\n      <button disabled={disabled} onClick={onClick}>\r\n        追加\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const UncompleteTodos = (props) => {\r\n  const { uncompleteTodos, onClickComplete, onClickDelete } = props;\r\n  return (\r\n    <div className=\"uncomplete-area\">\r\n      <p className=\"title\">未完了のTO DO</p>\r\n      <ul>\r\n        {uncompleteTodos.map((todo, index) => {\r\n          return (\r\n            <div key={todo} className=\"list-row\">\r\n              <li>{todo}</li>\r\n              <button onClick={() => onClickComplete(index)}>完了</button>\r\n              <button onClick={() => onClickDelete(index)}>削除</button>\r\n            </div>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CompleteTodos = (props) => {\r\n  const { completeTodos, onClickBack } = props;\r\n  return (\r\n    <div className=\"complete-area\">\r\n      <p className=\"title\">完了のTO DO</p>\r\n      <ul>\r\n        {completeTodos.map((todo, index) => {\r\n          return (\r\n            <div key={todo} className=\"list-row\">\r\n              <li>{todo}</li>\r\n              <button\r\n                onClick={() => {\r\n                  onClickBack(index);\r\n                }}\r\n              >\r\n                戻す\r\n              </button>\r\n            </div>\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport \"./styles.css\";\r\nimport { InputTodo } from \"./components/InputTodo\";\r\nimport { UncompleteTodos } from \"./components/UncompleteTodos\";\r\nimport { CompleteTodos } from \"./components/CompleteTodos\";\r\n\r\nexport const App = () => {\r\n  // 定義ここから\r\n  // 追加state\r\n  const [todoText, setTodoText] = useState(\"\");\r\n  // 未完了リストstate\r\n  const [uncompleteTodos, setUncompleteTodos] = useState([]);\r\n  // 完了リストstate\r\n  const [completeTodos, setCompleteTodos] = useState([]);\r\n\r\n  // 関数\r\n  // 入力する\r\n  const onChangeTodoText = (event) => setTodoText(event.target.value);\r\n  // 追加ボタン押して未完了リストに追加\r\n  const onClickAdd = () => {\r\n    if (todoText === \"\") return;\r\n    const newTodos = [...uncompleteTodos, todoText]; // 今ある未完了リストに追加したtodoを加え新しい配列を作る\r\n    setUncompleteTodos(newTodos); // 未完了リストのstateを新しい配列に変える\r\n    setTodoText(\"\"); // 入力欄を空に戻す\r\n  };\r\n  // 削除ボタン押して未完了リストからtodoを消す\r\n  const onClickDelete = (index) => {\r\n    const newTodos = [...uncompleteTodos]; // 今ある未完了リスト\r\n    newTodos.splice(index, 1); // 今ある未完了リストからindexに応じた場所から１つ削除\r\n    setUncompleteTodos(newTodos); // 未完了リストのstateを新しい配列に変える\r\n  };\r\n  // 完了ボタン押してtodoを未完了リストから完了リストに移動する\r\n  const onClickComplete = (index) => {\r\n    const newUncompleteTodos = [...uncompleteTodos]; // 今ある未完了リスト\r\n    newUncompleteTodos.splice(index, 1); // 今ある未完了リストからindexに応じた場所から１つ削除\r\n    const newCompleteTodos = [...completeTodos, uncompleteTodos[index]]; //今ある完了リストに未完了リストから削除したものを加える\r\n    setUncompleteTodos(newUncompleteTodos); // 未完了リストのstateを新しい配列に変える\r\n    setCompleteTodos(newCompleteTodos); // 完了リストのstateを新しい配列に変える\r\n  };\r\n  // 戻すボタン押してtodoを完了リストから未完了リストに戻す\r\n  const onClickBack = (index) => {\r\n    const newCompleteTodos = [...completeTodos]; // 今ある完了リスト\r\n    newCompleteTodos.splice(index, 1); // 今ある完了リストからindexに応じた場所から１つ削除\r\n    const newUncompleteTodos = [...uncompleteTodos, completeTodos[index]]; //今ある未完了リストに完了リストから削除したものを加える\r\n    setUncompleteTodos(newUncompleteTodos); // 未完了リストのstateを新しい配列に変える\r\n    setCompleteTodos(newCompleteTodos); // 完了リストのstateを新しい配列に変える\r\n  };\r\n  // 定義ここまで\r\n\r\n  // 表示\r\n  return (\r\n    <>\r\n      <InputTodo\r\n        todoText={todoText}\r\n        onChange={onChangeTodoText}\r\n        onClick={onClickAdd}\r\n        disabled={uncompleteTodos.length >= 5}\r\n      />\r\n      {uncompleteTodos.length >= 5 && (\r\n        <p style={{ color: \"red\" }}>これ以上追加できません。</p>\r\n      )}\r\n\r\n      <UncompleteTodos\r\n        uncompleteTodos={uncompleteTodos}\r\n        onClickComplete={onClickComplete}\r\n        onClickDelete={onClickDelete}\r\n      />\r\n      <CompleteTodos completeTodos={completeTodos} onClickBack={onClickBack} />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}